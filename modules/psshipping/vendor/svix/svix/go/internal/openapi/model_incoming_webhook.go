/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IncomingWebhook struct for IncomingWebhook
type IncomingWebhook struct {
	Channel string `json:"channel"`
	ChannelId string `json:"channel_id"`
	ConfigurationUrl string `json:"configuration_url"`
	Url string `json:"url"`
}

// NewIncomingWebhook instantiates a new IncomingWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncomingWebhook(channel string, channelId string, configurationUrl string, url string) *IncomingWebhook {
	this := IncomingWebhook{}
	this.Channel = channel
	this.ChannelId = channelId
	this.ConfigurationUrl = configurationUrl
	this.Url = url
	return &this
}

// NewIncomingWebhookWithDefaults instantiates a new IncomingWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncomingWebhookWithDefaults() *IncomingWebhook {
	this := IncomingWebhook{}
	return &this
}

// GetChannel returns the Channel field value
func (o *IncomingWebhook) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *IncomingWebhook) GetChannelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *IncomingWebhook) SetChannel(v string) {
	o.Channel = v
}

// GetChannelId returns the ChannelId field value
func (o *IncomingWebhook) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *IncomingWebhook) GetChannelIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *IncomingWebhook) SetChannelId(v string) {
	o.ChannelId = v
}

// GetConfigurationUrl returns the ConfigurationUrl field value
func (o *IncomingWebhook) GetConfigurationUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigurationUrl
}

// GetConfigurationUrlOk returns a tuple with the ConfigurationUrl field value
// and a boolean to check if the value has been set.
func (o *IncomingWebhook) GetConfigurationUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConfigurationUrl, true
}

// SetConfigurationUrl sets field value
func (o *IncomingWebhook) SetConfigurationUrl(v string) {
	o.ConfigurationUrl = v
}

// GetUrl returns the Url field value
func (o *IncomingWebhook) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *IncomingWebhook) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *IncomingWebhook) SetUrl(v string) {
	o.Url = v
}

func (o IncomingWebhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["channel"] = o.Channel
	}
	if true {
		toSerialize["channel_id"] = o.ChannelId
	}
	if true {
		toSerialize["configuration_url"] = o.ConfigurationUrl
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIncomingWebhook struct {
	value *IncomingWebhook
	isSet bool
}

func (v NullableIncomingWebhook) Get() *IncomingWebhook {
	return v.value
}

func (v *NullableIncomingWebhook) Set(val *IncomingWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableIncomingWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableIncomingWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncomingWebhook(val *IncomingWebhook) *NullableIncomingWebhook {
	return &NullableIncomingWebhook{value: val, isSet: true}
}

func (v NullableIncomingWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncomingWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


