/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OauthPayloadOut struct for OauthPayloadOut
type OauthPayloadOut struct {
	Channel NullableString `json:"channel,omitempty"`
	Error NullableString `json:"error,omitempty"`
	IncomingWebhookUrl NullableString `json:"incomingWebhookUrl,omitempty"`
}

// NewOauthPayloadOut instantiates a new OauthPayloadOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOauthPayloadOut() *OauthPayloadOut {
	this := OauthPayloadOut{}
	return &this
}

// NewOauthPayloadOutWithDefaults instantiates a new OauthPayloadOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOauthPayloadOutWithDefaults() *OauthPayloadOut {
	this := OauthPayloadOut{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OauthPayloadOut) GetChannel() string {
	if o == nil || o.Channel.Get() == nil {
		var ret string
		return ret
	}
	return *o.Channel.Get()
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OauthPayloadOut) GetChannelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Channel.Get(), o.Channel.IsSet()
}

// HasChannel returns a boolean if a field has been set.
func (o *OauthPayloadOut) HasChannel() bool {
	if o != nil && o.Channel.IsSet() {
		return true
	}

	return false
}

// SetChannel gets a reference to the given NullableString and assigns it to the Channel field.
func (o *OauthPayloadOut) SetChannel(v string) {
	o.Channel.Set(&v)
}
// SetChannelNil sets the value for Channel to be an explicit nil
func (o *OauthPayloadOut) SetChannelNil() {
	o.Channel.Set(nil)
}

// UnsetChannel ensures that no value is present for Channel, not even an explicit nil
func (o *OauthPayloadOut) UnsetChannel() {
	o.Channel.Unset()
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OauthPayloadOut) GetError() string {
	if o == nil || o.Error.Get() == nil {
		var ret string
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OauthPayloadOut) GetErrorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *OauthPayloadOut) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableString and assigns it to the Error field.
func (o *OauthPayloadOut) SetError(v string) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *OauthPayloadOut) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *OauthPayloadOut) UnsetError() {
	o.Error.Unset()
}

// GetIncomingWebhookUrl returns the IncomingWebhookUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OauthPayloadOut) GetIncomingWebhookUrl() string {
	if o == nil || o.IncomingWebhookUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.IncomingWebhookUrl.Get()
}

// GetIncomingWebhookUrlOk returns a tuple with the IncomingWebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OauthPayloadOut) GetIncomingWebhookUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IncomingWebhookUrl.Get(), o.IncomingWebhookUrl.IsSet()
}

// HasIncomingWebhookUrl returns a boolean if a field has been set.
func (o *OauthPayloadOut) HasIncomingWebhookUrl() bool {
	if o != nil && o.IncomingWebhookUrl.IsSet() {
		return true
	}

	return false
}

// SetIncomingWebhookUrl gets a reference to the given NullableString and assigns it to the IncomingWebhookUrl field.
func (o *OauthPayloadOut) SetIncomingWebhookUrl(v string) {
	o.IncomingWebhookUrl.Set(&v)
}
// SetIncomingWebhookUrlNil sets the value for IncomingWebhookUrl to be an explicit nil
func (o *OauthPayloadOut) SetIncomingWebhookUrlNil() {
	o.IncomingWebhookUrl.Set(nil)
}

// UnsetIncomingWebhookUrl ensures that no value is present for IncomingWebhookUrl, not even an explicit nil
func (o *OauthPayloadOut) UnsetIncomingWebhookUrl() {
	o.IncomingWebhookUrl.Unset()
}

func (o OauthPayloadOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Channel.IsSet() {
		toSerialize["channel"] = o.Channel.Get()
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	if o.IncomingWebhookUrl.IsSet() {
		toSerialize["incomingWebhookUrl"] = o.IncomingWebhookUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableOauthPayloadOut struct {
	value *OauthPayloadOut
	isSet bool
}

func (v NullableOauthPayloadOut) Get() *OauthPayloadOut {
	return v.value
}

func (v *NullableOauthPayloadOut) Set(val *OauthPayloadOut) {
	v.value = val
	v.isSet = true
}

func (v NullableOauthPayloadOut) IsSet() bool {
	return v.isSet
}

func (v *NullableOauthPayloadOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOauthPayloadOut(val *OauthPayloadOut) *NullableOauthPayloadOut {
	return &NullableOauthPayloadOut{value: val, isSet: true}
}

func (v NullableOauthPayloadOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOauthPayloadOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


